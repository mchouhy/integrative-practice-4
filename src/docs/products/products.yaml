openapi: 3.0.1
info:
  title: Product API
  description: API documentation for Product management
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: Products
    description: API for products
paths:
  /api/products:
    get:
      summary: Get all products
      description: Retrieve a list of products with pagination
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of products to return per page
        - in: query
          name: query
          schema:
            type: string
          description: Category to filter products by
        - in: query
          name: sort
          schema:
            type: string
          description: Field to sort products by
        - in: query
          name: page
          schema:
            type: integer
          description: Page number to return
      responses:
        200:
          description: A paginated list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  totalDocs:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  page:
                    type: integer
                  pagingCounter:
                    type: integer
                  hasPrevPage:
                    type: boolean
                  hasNextPage:
                    type: boolean
                  prevPage:
                    type: integer
                  nextPage:
                    type: integer
        500:
          description: Internal server error
    post:
      summary: Add a new product
      description: Add a new product to the inventory
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        500:
          description: Internal server error
  /api/products/{pid}:
    get:
      summary: Get a product by ID
      description: Retrieve a single product by its ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID of the product to retrieve
      responses:
        200:
          description: A single product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Internal server error
    put:
      summary: Update a product by ID
      description: Update an existing product by its ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Product successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        500:
          description: Internal server error
    delete:
      summary: Delete a product by ID
      description: Delete a single product by its ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID of the product to delete
      responses:
        200:
          description: Product successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        500:
          description: Internal server error
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        thumbnail:
          type: array
          items:
            type: string
        stock:
          type: number
        status:
          type: boolean
        category:
          type: string
        owner:
          type: string
          default: admin
